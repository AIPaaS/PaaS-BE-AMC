<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.aisse.core.dao.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.ai.aisse.core.po.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="renter_id" property="renterId" jdbcType="INTEGER" />
    <result column="login_account" property="loginAccount" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="TINYINT" />
    <result column="display_name" property="displayName" jdbcType="VARCHAR" />
    <result column="origin_type" property="originType" jdbcType="TINYINT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="zb_token" property="zbToken" jdbcType="VARCHAR" />
    <result column="zb_token_update" property="zbTokenUpdate" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="remember_token" property="rememberToken" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, renter_id, login_account, account_type, display_name, origin_type, password, 
    zb_token, zb_token_update, last_login_time, remember_token, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ai.aisse.core.po.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into users (id, renter_id, login_account, 
      account_type, display_name, origin_type, 
      password, zb_token, zb_token_update, 
      last_login_time, remember_token, created_at, 
      updated_at)
    values (#{id,jdbcType=INTEGER}, #{renterId,jdbcType=INTEGER}, #{loginAccount,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=TINYINT}, #{displayName,jdbcType=VARCHAR}, #{originType,jdbcType=TINYINT}, 
      #{password,jdbcType=VARCHAR}, #{zbToken,jdbcType=VARCHAR}, #{zbTokenUpdate,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{rememberToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.aisse.core.po.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="renterId != null" >
        renter_id,
      </if>
      <if test="loginAccount != null" >
        login_account,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="displayName != null" >
        display_name,
      </if>
      <if test="originType != null" >
        origin_type,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="zbToken != null" >
        zb_token,
      </if>
      <if test="zbTokenUpdate != null" >
        zb_token_update,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="rememberToken != null" >
        remember_token,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="renterId != null" >
        #{renterId,jdbcType=INTEGER},
      </if>
      <if test="loginAccount != null" >
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="displayName != null" >
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="originType != null" >
        #{originType,jdbcType=TINYINT},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="zbToken != null" >
        #{zbToken,jdbcType=VARCHAR},
      </if>
      <if test="zbTokenUpdate != null" >
        #{zbTokenUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rememberToken != null" >
        #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.aisse.core.po.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update users
    <set >
      <if test="renterId != null" >
        renter_id = #{renterId,jdbcType=INTEGER},
      </if>
      <if test="loginAccount != null" >
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="displayName != null" >
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="originType != null" >
        origin_type = #{originType,jdbcType=TINYINT},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="zbToken != null" >
        zb_token = #{zbToken,jdbcType=VARCHAR},
      </if>
      <if test="zbTokenUpdate != null" >
        zb_token_update = #{zbTokenUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rememberToken != null" >
        remember_token = #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.aisse.core.po.Users" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update users
    set renter_id = #{renterId,jdbcType=INTEGER},
      login_account = #{loginAccount,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=TINYINT},
      display_name = #{displayName,jdbcType=VARCHAR},
      origin_type = #{originType,jdbcType=TINYINT},
      password = #{password,jdbcType=VARCHAR},
      zb_token = #{zbToken,jdbcType=VARCHAR},
      zb_token_update = #{zbTokenUpdate,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      remember_token = #{rememberToken,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>